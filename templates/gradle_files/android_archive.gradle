android.libraryVariants.all { variant ->
    def javadoc = task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)

        options.addStringOption('Xdoclint:none', '-quiet')
        options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")

        //  Android
        exclude "**/R.java"
        exclude "**/BuildConfig.java"
    }

    def javadocJar = task("javadoc${variant.name}", type: Jar) {
        classifier = "javadoc"
        description "Bundles Javadoc into a JAR file for $variant.name."
        from tasks["generate${variant.name}Javadoc"]
    }

    def jar = task("jar${variant.name}", type: Jar) {
        description "Bundles compiled .class files into a JAR file for $variant.name."
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir

        manifest {
            attributes(
                    "Bundle-Name": POM_NAME,
                    "Bundle-Version": VERSION_NAME
            )
        }

        exclude '**/R.class', '**/R$*.class', '**/R.html'
        exclude '**/BuildConfig.class'
    }

    if (name.equals(BuilderConstants.RELEASE)) {
        artifacts.add('archives', jar);
        artifacts.add('archives', javadocJar);
    }
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}