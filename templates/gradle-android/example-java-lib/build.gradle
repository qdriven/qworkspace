import proguard.gradle.ProGuardTask

apply plugin: 'java'

compileJava.options.encoding = "utf-8"
compileTestJava.options.encoding = "utf-8"
javadoc.options.encoding = "utf-8"

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment ->
                signing.signPom(deployment)
            }

            snapshotRepository(url: RESP_SNAPSHOT_URL) {
                authentication(userName: RESP_SNAPSHOT_USERNAME, password: RESP_SNAPSHOT_PASSWORD)
            }
            repository(url: RESP_RELEASE_URL) {
                authentication(userName: RESP_RELEASE_USERNAME, password: RESP_RELEASE_PASSWORD)
            }

            pom.artifactId = POM_ARTIFACT_ID
            pom.groupId = POM_GROUP_ID
            pom.version = POM_VERSION

            pom.project {
                name POM_NAME
                description POM_DESCRIPTION
                packaging POM_PACKAGING
                inceptionYear POM_INCEPTION_YEAR

                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                    }
                }

                scm {
                    url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }

                developers {
                    developer {
                        id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                    }
                }
            }
        }
    }
}

task proguard(type: ProGuardTask) {
    dependsOn 'jar'
    configuration "proguard.conf"

//    libraryjars "${System.getProperty('java.home')}/lib/rt.jar"

    injars jar.archivePath
//    outjars "$buildDir/assemble/lib/${jar.baseName}-${POM_VERSION}.${jar.extension}"

    outjars "$buildDir/assemble/lib/${POM_GROUP_ID}.${POM_ARTIFACT_ID}-${POM_VERSION}.${jar.extension}"
}

javadoc {
    dependsOn "jar"
    description "Bundles Javadoc into a JAR file for ${name}."
    exclude '**/TestUtils.class'
}

jar {
    description "Bundles compiled .class files into a JAR file for ${name}."
    exclude '**/R.class', '**/R$*.class', '**/R.html', '**/R.*.html', 'BuildConfig.class'
    exclude '**/TestUtils.class'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
}