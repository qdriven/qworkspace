apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"
    lintOptions {
        abortOnError false
    }

    defaultConfig {
        applicationId "com.example.myapp"
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        // Enabling multidex support. (65535 methods)
        multiDexEnabled true

        manifestPlaceholders = [eventKey: "click", appName: "@string/app_name"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    //sign
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
        release {
            storeFile file("release.jks")
            storePassword "123456"
            keyAlias "test"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        all {
            manifestPlaceholders = [eventKey: "doubleclick"]
        }
        googlePlay {
            applicationId "com.example.myapp.google"
            manifestPlaceholders = [appName: "googleDemo"]
        }
        amazon {
            applicationId "com.example.myapp.amazon"
            manifestPlaceholders = [appName: "amazonDemo"]
        }
    }

//    productFlavors.all { flavor ->
//        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'

    compile project(":example-android-lib")

    //65535
    compile 'com.android.support:multidex:1.0.0'

    //Robolectric
    androidTestCompile "org.robolectric:robolectric:3.0"
}

tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
    options.encoding = "UTF-8"
}

task generateJavadoc(type: Javadoc) {
//    source = sourceSets.main.java.srcDirs
//    source =javaCompile.source
//    println source.


    destinationDir = new File("doc/javadoc")
    options.setEncoding("UTF-8")
    ArrayList<File> doclavaPath = new ArrayList<File>()
    doclavaPath.add(file("libs/doclava.jar"))
    options.setDocletpath(doclavaPath)
    options.setDoclet("com.google.doclava.Doclava")
    ArrayList<File> classPath = new ArrayList<File>()
    classPath.add(file("$System.env.ANDROID_HOME/platforms/android-21/android.jar"))
//    classPath.add(file("libs/android-support-v4.jar"))
    options.classpath(classPath)
//    options.showFromPrivate()
    options.bootClasspath(new File('$System.env.JAVA_HOME/jre/lib/rt.jar'))
    options.optionFiles(file('doc/javadoc.options'))
    doLast {
        println 'generating javadoc'
    }
}